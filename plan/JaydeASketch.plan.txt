Jayde-A-Sketch (Jayde's version of an Etch-A-Sketch)

The idea for this is to use mouse and arrow-key input to drag the "cursor" around on
a white (or gray) board to draw pictures.  Like an actual Etch-a-Sketch, the point
of drawing never leaves the surface, so everything is a continuous line.

A shake of the board will erase it, and we start over.

And also like an actual Etch-a-Sketch, the point of drawing doesn't change when we
shake it, so if we want to start in a specific spot, we have to go there and
then shake the board to clear it.

This is idea for what I want to work on - updating a BufferedImage object to display
"realtime".

We'll  use 2 mouse buttons now - left mouse button to drag the cursor (just moving
the mouse will get frustrating, so let us at least make it a conscious decision), and
right mouse button will pan the image around (with alt for Fine control, Shift for
Axis lock and Ctrl for snap to grid behavior).  Arrow keys to move the cursor or the
board (arrow moves cursor, Ctrl-arrow moves the board)

If one button is already held down, ignore the other button press (first button
held takes priority and will lock out any other button presses until it is released).

For Shift (Axis Lock), we'll make a new LMB origin at the point where the user
presses Shift, and we'll stop locking when they release, they can make a jagged line
with straight sections if they want by repeatedly holding and releasing shift while
they drag with LMB.


---

Got drawing to work with mouse input.  Think I'll skip arrow keys and go on to zooming and panning.

Some ground rules for zoom and pan:

The drawing panel should never come inside the window from the edge.
    If we are zoomed out all the way, the drawing panel should fill the entire window.
    If we zoom in, the window should always contain the drawing panel, no empty space.

So, left edge of the drawing panel should never move right to more than 0,
right edge of the drawing panel should never move left to more than PANEL SIZE,
top edge should never move down below 0
bottom edge should never move up above PANEL SIZE

We need to keep this in mind when we zoom in/out as well.
When we zoom in, everything is going to expand, so just keep track of leftBias as we've been.
When we zoom out, keep track of leftBias, but snap-to-edges as necessary.

Panning around should use the same methods as dragging the pen, we're just dragging the
panel instead.

---

Everything is working great!

Now I want to add one more feature - gridlines when zoomed in far enough.  At 1:1, 2:1 or 3:1, it'll be
too much visual noise to have grid lines.  But at 4:1 (or maybe 5:1) it will read a lot better with
3 pixels of data and one pixel of grid line in each axis.

We'll have the paintComponent check the zoom level, and after the AffineTransform onto the screen buffer,
if we're zoomed in enough, we'll call another method to add the grid lines.

The method will take into account the zoom level and the board offset to figure out:

    draw a line every x pixels starting at y where:

    x = zoom level
    y = offset % zoom level

I hope this works, let's implement it and see...

----

Worked nicely.  Now for instructions and a splash screen...  same screen!  Show splash screen at
startup and then whenever user presses F1.

Commands:

Left Mouse Button to drag pen and etch out drawing surface.
Right Mouse Button to drag the drawing surface when zoomed in.
Scroll Wheel or +/- keys to zoom in/out - centers on pen.
Scroll Wheel click or '0' to reset zoom.

When dragging, hold:
Alt - for fine control
Shift - to lock drag axis
        (locks to axis you next drag in,
         unlocks only when you release shift)
Ctrl - to snap the pen to a 10x10 grid

Space to shake and erase the drawing surface
F1 to bring up this Help screen
ESC to exit the program

-------------

So, program works as intended...  but upon re-thinking things, I want to bring it back to more
"realistic" Etch-a-Sketch behavior.  To start out with an Etch-A-Sketch, using one hand would
be turning just one knob (and thus only one axis).  So I want to reverse the Axis lock and
have it on by default.  If the user wants to "turn both knobs" (so the pen follows the mouse
in both axis' at the same time), they'll need to use both hands - one using the mouse, the
other on the Shift key.

We will need to accommodate this in behavior by making Axis Lock reset when the mouse is released.
This way, the user can change which direction they move the mouse by releasing and pressing the
mouse button again, and holding shift will just "free" the pen until they let go of shift.

Also going to switch Alt and Control buttons so that Control will allow "Fine Control" and
"Alt" will snap to a grid (alternate pen positioning).

These changes will require a change to the help screen as well.  Let's also just call it
HELP_SCREEN instead of Control-Version.

